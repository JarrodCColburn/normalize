/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.util.Arrays;
import java.util.List;
import org.junit.Before;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Ignore;

/**
 *
 * @author jarrodcolburn
 */
public class RecordSetTest {

    public List<Integer> age = Arrays.asList(30, 30, 35, 40, 40, 40, 35, 30, 30, 40, 30, 35, 35, 40);
    public List<Integer> income = Arrays.asList(3, 3, 3, 2, 1, 1, 1, 2, 1, 2, 2, 2, 3, 2);
    public List<Integer> student = Arrays.asList(0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0);
    public List<Integer> creditRating = Arrays.asList(5, 9, 5, 5, 5, 9, 9, 5, 5, 5, 9, 9, 5, 9);
    public List<Integer> groupingValues   = Arrays.asList(0,0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0);
    public List<String> attributeNames   = Arrays.asList("Age", "Income", "Student", "CreditRating");
    public List<List<Integer>> attributeValues  = Arrays.asList(age, income, student, creditRating);

    public List<Integer> one=   Arrays.asList(1,1,0,2,1,2,0,0,0,1,0,0,1,0,2,2,1,1,2,2,2,2,0,0,1,0,1,0,0,0,0,2,0,0,0,2,2,1,0,2,2,1,2,0,0,0,1,2,2,1,2,1,2,2,2,2,1,2,1,0,2,2,0,2,1,1,2,0,1,2,0,2,2,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,1,2,2,2,0,1,2,2,2,2,0,0,2,0,2,2,2,0,0,2,1,0,0,0,1,2,1,1,0,2,0,2,0,1,0,1,0,0,1,1,0,1,0,0,2,0,0,0,0,0,2,0,2,2,1,0,1,0,0,2,2,1,0,0,1,1,2,0,0,0,0,0,2,2,1,0,1,1,1,0,0,2,1,2,0,0,2,1,0,2,2,1,0,0,1,2,1,0,0,2,2,0,1,0,1,2,0,0,1,2,2,0,2,2,2,0,0,2,2,0,2,1,2,2,0,2,2,0,2,2,2,2,2,0,2,2,2,2,1,0,0,0,0,1,2,2,1,0,2,2,2,2,1,0,0,0,1,2,1,2,2,2,1,2,0,2,0,2,1,0,2,0,0,0,0,2,0,0,0,2,2,2,2,0,2,1,0,0,2,1,1,2,2,2,0,2,0,2,2,0,0,2,0,0,0,2,0,0,1,2,0,1,2,0,1,0,0,2,0,2,2,2,1,1,1,2,0,2,0,0,2,2,0,0,0,2,0,1,0,0,1,1,0,0,0,0,1,1,2,2,2,2,0,0,1,0,0,2,1,0,0,1,0,1,1,0,0,0,0,0,1,0,2,0,0,0,0,2,1,0,1,0,2,0,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,2,1,2,0,2,0,1,0,0,2,1,1,0,2,1,2,0,0,0,1,1,0,2,2,2,1,1,1,2,1,0,0,1,0,0,1,0,1,1,1,0,1,0,2,2,2,1,1,1,0,2,1,1,2,2,2,1,0,0,2,2,1,1,0,1,1,1,1,1,1,2,2,1,0,0,2,0,2,0,1,1,1,1,0,0,1,1,1,2,1,1,1,0,0,2,0,1,0,0,1,1,0,2,1,0,0,0,1,0,1,2,2,0,0,1,1,2,1,2,1,0,0,0,0,1,1,1,2,1,0,1,1,0,1,2,0,0,2,0,0,0,1,0,1,1,1,0,1,1,1,0,0,1,1,0,1,2,2,2,2,0,0,2,1,1,0,0,0,1,1,2,0,1,0,2,1,2,1,1,0,2,1,1,1,1,1,0,1,0,0,1,1,1,2,1,0,1,1,2,1,2,0,0,1,0,1,1,0,2,2,0,1,0,1,0,0,1,2,1,0,2,0,0,2,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,1,1,0,0,1,1,2,0,0,1,0,0,0,0,1,0,1,1,0,0,0,1,0,1,0,1,0,0,2,1,1,0,0,0,0,0,1,0,0,1,0,0,0,0,1,1,1);
    public List<Integer> two=   Arrays.asList(0,2,0,2,0,2,0,0,0,1,0,0,1,0,2,2,0,0,2,0,1,2,0,0,1,1,0,0,0,0,0,2,0,0,0,2,1,2,2,2,2,2,2,0,2,0,0,2,2,1,1,2,2,2,2,1,1,2,1,0,2,1,0,2,0,1,1,0,0,2,1,2,2,0,0,1,0,0,1,0,1,0,2,2,1,2,0,0,0,0,0,0,0,0,0,0,2,2,1,1,0,1,2,1,2,2,0,2,1,2,1,2,1,0,1,2,0,1,0,1,2,1,2,0,2,0,1,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,2,0,1,2,0,0,2,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,2,2,2,0,2,0,1,0,0,0,2,2,0,2,2,2,1,2,2,0,0,0,0,2,0,0,0,2,2,0,0,0,2,2,0,0,0,2,2,0,2,2,2,0,0,2,0,0,2,0,2,2,0,2,2,0,2,2,2,2,2,1,2,2,2,2,0,0,0,0,0,0,2,2,0,1,2,1,2,2,2,0,0,0,2,2,2,2,2,2,0,2,1,2,0,2,0,1,1,0,0,0,0,2,0,0,2,2,2,2,2,0,0,2,0,0,2,2,1,1,0,2,0,2,0,1,2,0,0,2,0,0,0,2,0,0,2,2,0,2,2,0,2,0,1,0,0,2,2,2,0,1,2,2,0,2,0,0,2,1,0,0,0,2,0,1,0,2,1,0,0,2,2,0,0,1,2,2,1,2,2,1,2,0,0,2,2,0,0,1,0,0,0,0,0,0,0,0,1,0,2,1,0,0,1,2,1,0,0,0,2,0,0,1,0,0,0,1,1,2,0,1,0,1,0,1,0,1,0,0,2,0,2,1,2,0,1,1,1,2,1,0,0,2,1,2,0,0,1,0,0,1,2,2,2,0,0,0,2,1,0,0,0,0,0,0,0,2,0,0,0,2,1,1,2,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,1,2,0,1,2,2,0,0,0,2,2,1,0,2,0,2,0,0,0,1,0,0,0,0,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,2,0,0,1,2,0,1,1,0,0,0,0,0,0,0,0,2,0,0,2,2,2,2,0,0,2,0,0,0,0,0,0,2,2,0,0,0,2,0,2,0,2,2,1,0,2,0,0,0,0,1,0,0,0,2,1,2,0,0,2,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,1,0,0,2,0,0,2,1,0,0,0,0,0,0,0,0,1,0,2,0,0,1,0,0,0,0,0,2,2,0,0,0,0,0,0,0,1,0,2,2,2,1,0,1,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,2);
    public List<Integer> three= Arrays.asList(0,2,0,2,0,2,0,1,0,0,0,0,1,0,2,2,0,0,2,0,1,2,0,0,1,0,0,0,1,0,0,2,0,1,0,2,0,2,1,1,2,2,2,0,2,0,0,2,2,1,2,2,2,2,2,2,1,2,2,0,2,2,0,1,0,2,2,0,1,1,1,2,2,1,2,0,0,0,1,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,1,2,2,2,2,0,2,0,2,1,2,1,0,1,2,0,0,1,0,2,2,2,0,1,0,2,0,1,0,2,0,0,0,0,0,1,0,0,2,0,0,2,0,0,2,0,2,2,0,0,2,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,2,2,2,0,2,0,1,0,0,0,2,2,0,2,2,2,1,2,2,0,0,0,0,2,0,0,0,2,2,0,0,0,2,2,0,0,0,2,2,0,2,2,2,0,0,2,1,0,2,0,2,2,0,2,2,0,2,2,2,2,2,1,2,2,2,1,1,0,0,0,0,0,2,2,0,1,2,1,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,0,2,0,2,2,0,0,0,0,2,0,0,1,2,2,2,2,0,1,2,0,0,2,2,2,0,1,2,0,2,0,2,2,0,0,2,0,0,0,2,0,0,2,2,0,2,1,0,2,0,1,0,0,1,2,2,0,1,2,2,0,2,0,0,2,1,0,0,0,2,0,1,0,2,1,0,0,2,2,0,0,1,2,2,2,2,1,1,2,0,0,2,2,1,1,1,1,1,0,1,0,0,0,0,2,0,1,1,0,0,1,2,1,0,0,0,2,0,0,1,0,0,0,0,1,2,0,1,0,0,0,1,0,1,1,0,2,1,2,1,2,0,1,0,1,2,1,1,0,2,2,2,0,0,0,0,0,1,2,2,2,0,1,0,1,1,0,0,0,0,0,0,0,2,0,0,0,2,0,1,2,2,1,1,0,0,0,0,0,2,2,2,0,1,0,0,0,0,0,0,1,0,0,2,0,1,2,2,1,0,0,2,2,1,0,2,0,2,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,0,0,1,2,0,0,2,2,0,0,0,0,1,0,2,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,2,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,2,1,0,2,2,2,2,0,0,2,1,0,0,0,0,1,2,2,0,0,0,2,0,2,0,2,2,2,1,2,0,1,1,0,2,0,0,0,2,1,2,0,0,2,0,1,2,2,0,0,1,0,0,0,0,1,1,0,0,1,2,0,0,0,1,0,0,2,0,2,2,2,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,2,2,0,0,0,1,1,0,0,1,0,2,2,2,0,0,1,0,2,1,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,2);
    public List<Integer> four=  Arrays.asList(0,2,0,0,1,2,0,0,0,0,0,0,1,0,2,2,0,0,2,0,2,1,0,0,2,0,0,0,0,0,0,1,1,0,0,2,0,2,1,0,1,2,2,0,2,0,1,1,0,2,1,2,2,1,0,0,0,1,2,0,0,0,0,0,0,0,1,0,0,2,1,2,0,0,0,1,0,0,0,1,0,0,2,0,2,2,0,1,0,1,0,0,0,0,1,0,1,2,0,2,0,0,2,2,2,2,0,2,1,1,2,1,0,0,0,2,0,0,1,0,1,0,2,0,2,0,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,1,2,0,0,2,0,0,2,0,0,1,2,0,0,1,0,2,2,0,1,0,0,0,2,2,2,0,1,0,1,0,0,0,2,2,0,2,2,2,0,2,2,0,0,0,0,2,2,0,0,2,2,0,0,0,2,1,0,0,0,2,2,0,2,2,2,0,0,2,0,1,1,1,1,2,0,2,2,0,1,2,2,1,2,0,1,2,2,1,1,1,0,0,0,1,2,0,0,0,2,2,1,0,1,0,0,0,0,2,2,2,2,2,0,1,1,1,0,0,0,1,0,0,0,0,0,1,0,1,2,0,2,2,2,0,0,2,0,0,2,2,1,0,2,2,0,2,0,2,2,0,0,2,0,0,0,2,0,0,1,2,0,2,1,0,2,0,0,0,0,1,2,1,0,1,2,1,0,2,0,0,2,0,0,0,0,2,0,1,0,2,2,1,0,1,2,0,0,0,2,1,2,2,2,0,1,0,0,2,2,0,0,0,0,0,1,0,0,0,0,2,0,0,2,1,0,0,1,1,1,0,0,1,2,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,1,0,0,2,0,1,2,2,0,1,0,1,2,0,0,0,2,0,1,0,0,0,1,0,1,2,0,0,0,1,0,2,2,1,0,2,0,0,0,0,2,1,0,1,2,0,0,2,2,0,0,1,0,1,0,0,2,1,2,0,0,0,1,0,0,0,0,0,0,0,2,0,2,2,2,0,1,0,2,2,0,0,2,0,2,2,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,2,2,0,0,1,1,0,0,2,2,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,2,0,0,2,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,2,0,0,0,2,2,2,0,0,1,0,0,0,0,0,0,2,2,0,2,0,2,0,2,0,2,2,2,0,1,0,0,0,0,0,0,0,0,2,2,1,1,0,2,0,2,2,2,0,0,0,0,0,0,0,1,1,0,1,0,2,0,0,0,0,0,0,2,0,0,2,1,0,1,1,0,0,0,0,0,0,1,2,0,1,1,0,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,2,2,1,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,1,2,0,0,0,0,1,2,2);
    public List<Integer> five=  Arrays.asList(0,2,0,1,0,2,0,0,0,0,0,0,0,0,2,2,0,0,2,0,2,2,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,2,1,2,2,2,0,2,0,0,2,0,0,1,2,2,2,1,2,2,0,1,0,2,2,0,1,0,2,2,0,0,2,0,2,1,0,0,0,0,1,0,0,0,0,2,2,2,2,0,1,0,0,0,0,0,0,0,0,2,2,2,0,0,2,2,1,0,2,0,1,0,2,0,2,0,0,0,2,2,0,0,0,2,2,2,0,2,0,2,2,0,0,2,0,1,0,0,0,0,0,0,2,0,0,2,1,2,2,0,2,2,0,0,1,0,0,2,2,0,0,0,0,2,2,0,0,0,0,0,2,1,2,0,2,0,2,0,0,0,2,2,0,2,2,2,0,2,2,0,0,0,0,2,0,0,0,2,2,0,0,0,2,2,0,0,0,2,2,0,2,1,2,0,0,2,0,0,2,0,1,1,0,2,1,0,2,1,2,1,2,1,2,2,2,1,0,0,0,0,0,0,2,0,0,0,0,1,2,2,2,0,0,0,2,1,2,2,2,2,0,1,1,1,0,1,0,1,1,0,0,0,0,1,0,0,2,0,0,2,2,1,2,2,0,0,0,2,2,2,2,2,0,2,0,1,2,0,0,2,0,1,0,2,0,0,2,2,2,2,2,0,0,0,0,0,0,2,2,0,0,0,2,1,0,2,0,0,0,0,0,0,0,2,0,1,0,2,1,0,0,2,2,0,1,1,2,2,1,2,2,2,0,0,0,2,2,0,0,1,0,0,0,0,0,0,0,1,2,0,2,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,1,1,2,0,0,2,0,2,0,0,0,2,0,2,0,0,0,2,0,0,2,1,2,0,0,0,2,0,0,0,1,0,0,0,0,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,2,1,1,0,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,1,0,0,0,2,1,1,1,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,2,1,0,0,2,0,0,0,0,0,0,2,2,0,1,0,2,0,2,0,2,2,1,0,2,0,0,0,0,0,0,0,0,2,2,2,0,0,2,0,1,2,2,0,0,0,0,0,0,0,1,0,0,0,1,2,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,2,2,2,0,0,1,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,0,1,0,2,1,2);
    public List<Integer> six=   Arrays.asList(0,2,1,2,0,2,2,0,0,0,0,0,1,1,2,0,0,0,2,0,2,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,2,2,1,2,0,0,0,2,0,0,2,1,2,2,2,2,2,2,0,2,1,1,1,2,1,0,1,0,2,2,0,0,1,0,2,2,1,0,0,1,0,0,0,0,1,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,1,0,1,2,2,0,2,1,2,2,2,1,2,1,2,1,1,0,1,2,2,2,0,2,0,2,0,0,0,2,0,0,1,0,0,0,0,0,2,2,0,2,1,0,2,0,2,2,1,0,2,0,0,2,2,0,0,1,1,2,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,2,2,0,2,2,2,0,2,2,0,0,0,0,2,0,0,0,2,2,0,0,0,2,2,0,0,0,2,2,0,2,2,2,0,0,2,0,0,2,2,2,2,0,2,2,0,2,2,2,0,2,0,2,1,2,2,1,0,0,2,0,1,2,2,0,0,2,2,2,2,2,0,0,0,2,2,2,2,2,1,0,2,2,2,0,2,0,2,2,0,0,0,0,2,0,0,2,2,2,2,2,0,2,2,0,0,2,2,2,0,2,2,0,2,0,2,2,0,0,1,2,0,0,0,0,0,2,2,0,2,2,0,2,0,0,2,0,2,2,2,0,0,2,2,0,2,0,0,2,2,0,0,0,2,0,0,0,0,2,0,0,1,2,0,0,1,2,2,2,2,2,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,1,0,2,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,1,0,0,2,0,2,1,2,0,1,0,1,2,0,0,0,2,0,1,0,0,0,0,0,0,2,2,0,0,0,0,2,2,1,1,0,0,0,0,0,2,0,0,0,2,0,2,2,1,0,0,0,2,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,1,0,2,1,2,0,2,0,2,2,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,1,2,2,2,2,0,0,1,0,0,0,0,0,0,2,2,0,0,0,2,0,1,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,2,2,0,0,2,0,2,1,2,0,0,0,0,0,0,0,1,0,0,0,2,2,2,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,2,0,0,1,0,1,2,2);
    public List<Integer> seven= Arrays.asList(1,1,1,1,1,2,1,1,0,0,1,0,2,1,2,2,0,1,2,1,2,2,0,1,1,0,0,0,0,0,1,2,1,0,0,2,2,2,2,2,2,1,2,0,2,0,1,1,0,1,2,2,2,1,1,2,2,2,2,0,1,1,0,2,1,2,2,1,0,2,2,2,1,2,0,0,1,0,2,0,1,2,2,2,2,2,1,0,1,0,1,0,1,1,0,1,0,2,1,0,1,2,2,1,2,2,0,2,2,1,2,2,1,0,1,2,0,1,1,1,2,2,2,0,2,1,0,0,0,1,1,0,0,1,0,0,0,0,0,2,0,0,2,0,2,2,1,2,2,0,0,1,0,1,2,2,1,1,0,1,1,1,1,0,0,1,0,2,2,2,1,2,1,1,1,0,1,2,2,1,2,2,2,1,2,2,0,1,1,1,2,1,0,0,2,2,1,1,1,2,1,1,1,1,2,2,1,2,2,2,0,1,2,1,1,2,0,2,2,0,2,2,1,2,2,2,2,2,1,2,2,1,2,0,1,1,2,1,1,2,1,1,0,2,1,2,1,1,0,0,1,1,2,2,2,2,2,1,2,2,2,1,1,1,2,1,1,0,0,1,1,1,1,2,2,1,2,2,0,2,2,0,1,0,2,2,0,2,2,1,2,1,1,1,1,1,2,2,0,0,1,0,0,2,2,1,2,2,1,2,1,0,2,0,1,2,2,1,0,2,1,0,1,1,0,2,2,1,0,0,2,0,0,0,1,2,0,1,2,2,0,0,1,2,2,1,2,2,0,0,1,0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,2,1,0,0,0,2,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,1,0,0,2,1,2,1,2,0,1,0,1,2,1,0,0,2,0,2,0,0,0,1,0,0,2,2,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,2,2,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,2,1,2,0,2,0,2,0,0,0,0,0,0,1,0,0,1,0,0,2,0,0,0,0,0,0,0,2,2,0,0,0,2,0,0,2,2,0,0,0,1,0,0,2,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,2,0,0,2,0,1,2,0,0,2,0,0,0,0,1,1,1,0,1,2,1,0,0,2,2,2,0,0,2,1,0,0,0,1,0,2,2,0,0,0,2,0,2,0,2,2,2,0,2,0,0,1,0,0,0,0,0,2,2,2,0,0,2,0,2,2,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,0,1,2,0,0,1,0,0,0,0,0,1,2,2,2,1,1,0,0,0,0,0,0,0,2,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,2,2,2);
    public List<Integer> eight= Arrays.asList(0,1,0,2,0,2,0,0,0,0,0,0,2,0,2,2,0,0,0,0,2,2,0,0,2,0,0,0,0,0,0,2,0,0,0,2,0,2,2,2,2,0,2,0,2,0,0,2,0,2,2,2,0,2,2,2,0,0,2,0,2,2,0,2,0,2,2,1,0,2,1,2,1,1,0,0,0,0,0,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,2,2,0,0,2,1,0,2,2,2,2,0,2,0,0,0,1,2,0,0,0,0,2,2,2,0,2,0,2,0,0,0,2,1,0,2,0,0,0,0,0,2,0,0,0,0,2,2,0,2,2,0,0,0,0,0,2,2,1,0,0,1,2,0,0,0,0,0,0,2,0,2,0,2,0,0,0,0,0,2,0,0,2,2,2,0,2,2,0,0,0,0,2,0,0,0,2,0,0,0,0,2,2,0,0,0,2,2,0,2,2,2,0,0,2,0,0,2,0,2,2,0,2,2,0,2,2,2,2,0,2,2,2,2,2,2,0,0,0,0,0,2,2,2,0,2,2,2,2,2,0,0,0,2,0,2,2,2,2,1,2,0,2,0,2,0,0,2,1,0,0,0,2,0,0,2,2,2,2,2,0,2,2,0,0,2,2,2,0,2,2,0,2,0,2,2,0,0,2,0,0,0,2,0,0,2,2,0,2,2,0,0,0,2,2,0,2,0,0,0,1,2,2,0,2,0,0,2,2,0,0,0,2,0,2,2,2,2,0,0,2,2,0,1,2,2,2,2,2,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,2,1,0,0,1,0,0,1,1,0,2,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,2,0,2,2,1,0,1,0,0,1,2,0,0,2,0,2,0,0,1,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,2,2,0,0,0,0,0,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,1,2,0,0,2,2,1,2,0,0,2,0,0,0,0,0,0,2,2,0,0,0,2,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,2,2,1,0,0,0,0,2,0,0,0,2,0,0,0,0,2,2,2);
    public List<Integer> nine=  Arrays.asList(0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,0,0,2,0,0,0,2,2,0,2,2,0,0,0,2,0,0,0,0,0,0,0,2,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,2,2,0,2,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,2,2,0,0,0,2,2,0,2,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,2,0,0,0,0,0,0,2,2,0,0,2,0,2,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,0,0,2,0,0,0,0,2,0,0,2,0,2,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,0,2,2,0,0,2,0,2,0,2,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,2,2,0,0,2,0,0,0,0,0,0,2,0,0,2,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,2,2,2,2,2,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,2,0,0,0,2,0,0,2,0,0);
    
    public List<Integer> allGrouping = Arrays.asList(2,2,2,2,2,4,2,2,2,2,2,2,4,2,4,4,2,2,4,2,4,4,2,2,4,2,2,2,2,2,2,4,2,2,2,4,2,4,4,4,4,4,4,2,4,2,2,4,4,4,4,4,4,4,4,4,4,4,4,2,4,4,2,4,2,4,4,2,2,4,2,4,4,2,2,2,2,2,2,2,2,2,4,4,4,4,2,2,2,2,2,2,2,2,2,2,4,4,4,4,2,4,4,4,4,4,2,4,2,4,4,4,2,2,2,4,2,2,2,2,4,4,4,2,4,2,4,2,2,2,4,2,2,2,2,2,2,2,2,4,2,2,4,2,2,4,2,4,4,2,2,4,2,2,4,4,2,2,2,2,4,4,2,2,2,2,2,4,4,4,2,4,2,4,2,2,2,4,4,2,4,4,4,2,4,4,2,2,2,2,2,2,2,2,4,4,2,2,2,4,4,2,2,2,4,4,2,4,4,4,2,2,4,2,2,4,4,4,4,2,4,4,2,4,4,4,2,4,2,4,4,4,4,2,2,2,2,2,2,4,4,2,2,4,2,4,4,4,2,2,2,2,4,4,4,4,4,2,4,4,4,2,4,2,4,4,2,2,2,2,4,2,2,4,4,4,4,4,2,4,4,2,2,4,4,2,2,4,4,2,4,2,4,4,2,2,4,2,2,2,4,2,2,4,4,2,2,4,2,4,2,2,4,2,4,4,4,2,2,4,4,2,4,2,2,4,4,2,2,2,4,2,2,2,4,4,2,2,2,4,2,2,4,4,4,4,4,4,2,2,2,2,4,4,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,4,2,2,2,2,4,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,4,2,4,2,4,2,2,2,2,4,2,2,2,4,2,4,2,2,2,2,2,2,2,4,4,2,2,2,4,2,2,2,2,2,2,2,2,4,2,2,2,4,2,4,4,4,2,2,2,2,2,2,2,4,4,4,2,2,2,2,2,2,2,2,2,2,2,4,2,2,4,4,2,2,2,4,4,4,2,4,2,4,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,4,4,2,2,2,4,2,2,4,4,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,4,4,4,4,2,2,4,2,2,2,2,2,2,4,4,2,2,2,4,2,4,2,4,4,4,2,4,2,2,2,2,2,2,2,2,4,4,4,2,2,4,2,4,4,4,2,2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,4,2,2,2,2,2,2,2,2,2,4,4,4,2,2,2,2,2,2,2,2,2,4,4,2,2,2,2,2,2,2,2,2,4,2,2,2,2,4,4,4);

    public List<List<Integer>> all= Arrays.asList(one,two,three,four,five,six,seven,eight,nine);
    public List<String> allNames = Arrays.asList("one","two","three","four","five","six","seven","eight","nine","ten");
    
    public RecordSetTest() {
    }

    @Before
    public void setUp() {
    }

    /**
     * Test of returnEntropy method, of class RecordSet.
     */
    @Test
    public void testReturnEntropy() {
        System.out.println("returnEntropy");
        List<Integer> A = age;
        List<Integer> B = groupingValues;
        Double expResult = 0.693536139;
        Double result = RecordSet.returnEntropy(A,B);
        assertEquals(expResult, result, 0.0001);
    }

    /**
     * Test of returnSplit method, of class RecordSet.
     */
    
    @Test
    public void testReturnSplit() {
        System.out.println("returnSplit");
        List<List<Integer>> attributeValues = this.attributeValues;
        List<Integer> groupingVales = this.groupingValues;
        Integer expResult = 0;
        Integer result = RecordSet.returnSplit(attributeValues, groupingVales);
        assertEquals(expResult, result);
    }
    @Test
    public void testReturnSplit2() {
        System.out.println("returnSplit");
        List<List<Integer>> attributeValues = this.all;
        List<Integer> groupingVales = this.allGrouping;
        Integer expResult = 0;
        Integer result = RecordSet.returnSplit(attributeValues, groupingVales);
         assertEquals(expResult, result);
    }
    /**
     * Test of Units method, of class RecordSet.
     */
    @Ignore
    @Test
    public void testUnits() {
    }

    /**
     * Test of Calculation method, of class RecordSet.
     */
    @Ignore
    @Test
    public void testCalculation() {
    }

    /**
     * Test of lg method, of class RecordSet.
     */
    @Ignore
    @Test
    public void testLg() {
    }

}
